# pul request
# git push - перенос изменений push
# Циклы в Python - новая тема.
# Цикл itarable object  способ выполнять один участок кода несколько раз.
# itarable object  - это все  объекты в Python
# Два цикла в Python: For and While
# For - количество итераций == длинне объекта(len(obj))
# выучить методы в Python
# items - метод
# полезные функции в for: range(start, stop,step) - stop(обязательный), start = 0, step = 1 - генератор последовательности.
# значение stop -  не включается в последовательность. start - включается в последовательность. start не равно step.
# enumerate - возвращает список  кортежей(индекс, значение)
# у  цикла for есть else - этот блок исполняется,  когда цикл завершился до конца
# оператор break -  принудительное завершение цикла.
# isinstance проверяте () проверяет, является ли объект (первый аргумент) экземпляром или подклассом класса classinfo (второй аргумент).
# isinstance (i , int)
# в паре с  break идет continue принудительный переход к следующей итерации.
# i += 10 == i = i +10
# f string -  способ форматирования строки (f - строка)
# метод списков  -  посмотреть  и выучить!
# решить  задачу
# a = [3, 4, 6, 9]
# target  = 7 # найти в списке два числа.
# while - позволяет выполнять цикл пока есть True
# генераторы
# list, tuple, dict + comprehansios
# b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# a = [i for i in b if i % 2 == 0 or i % 3 == 0]
# print(a)
# a = tuple(( i for i in range(10))) -  запомнить
# a = {K: v + 1 for k, v in enumerate(range(10))} -  запонить
# тернарный оператор a = "asd"
#                   b = 3 if len(a) == 3 else "undefined"
